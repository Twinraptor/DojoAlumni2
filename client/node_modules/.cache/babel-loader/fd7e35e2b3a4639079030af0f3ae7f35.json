{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\DojoAlumni\\\\client\\\\src\\\\components\\\\post\\\\PostTop.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLikeSingle, unLikeSingle } from \"../../actions/post\";\n\nconst PostTop = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  addLikeSingle,\n  unLikeSingle\n}) => {\n  console.log(likes.length);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/profile/${user}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, date)), React.createElement(\"button\", {\n    onClick: e => addLikeSingle(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, likes.length))), React.createElement(\"button\", {\n    onClick: e => unLikeSingle(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))));\n};\n\nPostTop.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLikeSingle: PropTypes.func.isRequired,\n  unLikeSingle: PropTypes.func.isRequired\n};\n\nconst mapStatesToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStatesToProps, {\n  addLikeSingle,\n  unLikeSingle\n})(PostTop);","map":{"version":3,"sources":["D:/react/DojoAlumni/client/src/components/post/PostTop.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLikeSingle","unLikeSingle","PostTop","auth","post","_id","text","name","avatar","user","likes","comments","date","console","log","length","e","propTypes","object","isRequired","func","mapStatesToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLikeSingle, unLikeSingle } from \"../../actions/post\";\r\n\r\nconst PostTop = ({\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  addLikeSingle,\r\n  unLikeSingle,\r\n}) => {\r\n  console.log(likes.length);\r\n  return (\r\n    <Fragment>\r\n      <div className='post bg-white p-1 my-1'>\r\n        <div>\r\n          <Link to={`/profile/${user}`}>\r\n            <img className='round-img' src={avatar} alt='' />\r\n            <h4>{name}</h4>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <p className='my-1'>{text}</p>\r\n          <p className='post-date'>\r\n            Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n          </p>\r\n          <button\r\n            onClick={(e) => addLikeSingle(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up'></i>{\" \"}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={(e) => unLikeSingle(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down'></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPostTop.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLikeSingle: PropTypes.func.isRequired,\r\n  unLikeSingle: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStatesToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatesToProps, { addLikeSingle, unLikeSingle })(\r\n  PostTop\r\n);\r\n"]},"metadata":{},"sourceType":"module"}