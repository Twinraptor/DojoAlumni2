{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\DojoAlumni\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { BrowserRouter } from \"react-router-dom/cjs/react-router-dom.min\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  },\n  deleteAccount\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \" Welcome \", auth.user && auth.user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Experience, {\n    experience: profile.experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Education, {\n    education: profile.education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Delete Account\")))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Your profile has not been set up yet. Please out your profile.\", \" \", React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Create Profile\"))));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);","map":{"version":3,"sources":["D:/react/DojoAlumni/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","Link","PropTypes","getCurrentProfile","deleteAccount","connect","Spinner","BrowserRouter","DashboardActions","Experience","Education","Dashboard","auth","profile","loading","user","name","experience","education","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { BrowserRouter } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  auth,\r\n  profile: { profile, loading },\r\n  deleteAccount,\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome {auth.user && auth.user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions></DashboardActions>\r\n          <Experience experience={profile.experience}></Experience>\r\n          <Education education={profile.education}></Education>\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user'> Delete Account</i>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>\r\n            Your profile has not been set up yet. Please out your profile.{\" \"}\r\n            <Link to='/create-profile' className='btn btn-primary my-1'>\r\n              Create Profile\r\n            </Link>\r\n          </p>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n"]},"metadata":{},"sourceType":"module"}