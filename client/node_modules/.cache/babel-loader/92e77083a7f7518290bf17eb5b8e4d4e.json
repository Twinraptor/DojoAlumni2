{"ast":null,"code":"import React,{Fragment}from\"react\";import{Link}from\"react-router-dom\";import Moment from\"react-moment\";import{connect}from\"react-redux\";import{addLike,unLike,deletePost}from\"../../actions/post\";var PostItem=function PostItem(_ref){var auth=_ref.auth,_ref$post=_ref.post,_id=_ref$post._id,text=_ref$post.text,name=_ref$post.name,avatar=_ref$post.avatar,user=_ref$post.user,likes=_ref$post.likes,comments=_ref$post.comments,date=_ref$post.date,addLike=_ref.addLike,unLike=_ref.unLike,deletePost=_ref.deletePost;return React.createElement(Fragment,null,React.createElement(\"div\",{className:\"post bg-white p-1 my-1\"},React.createElement(\"div\",null,React.createElement(Link,{to:\"/profile/\".concat(user)},React.createElement(\"img\",{className:\"round-img\",src:avatar,alt:\"\"}),React.createElement(\"h4\",null,name))),React.createElement(\"div\",null,React.createElement(\"p\",{className:\"my-1\"},text),React.createElement(\"p\",{className:\"post-date\"},\"Posted on \",React.createElement(Moment,{format:\"YYYY/MM/DD\"},date)),React.createElement(\"button\",{onClick:function onClick(e){return addLike(_id);},type:\"button\",className:\"btn btn-light\"},React.createElement(\"i\",{className:\"fas fa-thumbs-up\"}),\" \",React.createElement(\"span\",null,likes.length>0&&React.createElement(\"span\",null,likes.length))),React.createElement(\"button\",{onClick:function onClick(e){return unLike(_id);},type:\"button\",className:\"btn btn-light\"},React.createElement(\"i\",{className:\"fas fa-thumbs-down\"})),React.createElement(Link,{to:\"/posts/\".concat(_id),className:\"btn btn-primary\"},\"Discussion\",\" \",comments.length>0&&React.createElement(\"span\",{className:\"comment-count\"},comments.length)),!auth.loading&&user===auth.user._id&&React.createElement(\"button\",{onClick:function onClick(e){return deletePost(_id);},type:\"button\",className:\"btn btn-danger\"},React.createElement(\"i\",{className:\"fas fa-times\"})))));};var mapStatesToProps=function mapStatesToProps(state){return{auth:state.auth};};export default connect(mapStatesToProps,{addLike:addLike,unLike:unLike,deletePost:deletePost})(PostItem);","map":{"version":3,"sources":["D:/react/DojoAlumni/client/src/components/posts/PostItem.js"],"names":["React","Fragment","Link","Moment","connect","addLike","unLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","e","length","loading","mapStatesToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,UAA1B,KAA4C,oBAA5C,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAMX,IALJC,CAAAA,IAKI,MALJA,IAKI,gBAJJC,IAII,CAJIC,GAIJ,WAJIA,GAIJ,CAJSC,IAIT,WAJSA,IAIT,CAJeC,IAIf,WAJeA,IAIf,CAJqBC,MAIrB,WAJqBA,MAIrB,CAJ6BC,IAI7B,WAJ6BA,IAI7B,CAJmCC,KAInC,WAJmCA,KAInC,CAJ0CC,QAI1C,WAJ0CA,QAI1C,CAJoDC,IAIpD,WAJoDA,IAIpD,CAHJb,OAGI,MAHJA,OAGI,CAFJC,MAEI,MAFJA,MAEI,CADJC,UACI,MADJA,UACI,CACJ,MACE,qBAAC,QAAD,MACE,2BAAK,SAAS,CAAC,wBAAf,EACE,+BACE,oBAAC,IAAD,EAAM,EAAE,oBAAcQ,IAAd,CAAR,EACE,2BAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAED,MAAhC,CAAwC,GAAG,CAAC,EAA5C,EADF,CAEE,8BAAKD,IAAL,CAFF,CADF,CADF,CAOE,+BACE,yBAAG,SAAS,CAAC,MAAb,EAAqBD,IAArB,CADF,CAEE,yBAAG,SAAS,CAAC,WAAb,eACY,oBAAC,MAAD,EAAQ,MAAM,CAAC,YAAf,EAA6BM,IAA7B,CADZ,CAFF,CAKE,8BACE,OAAO,CAAE,iBAACC,CAAD,QAAOd,CAAAA,OAAO,CAACM,GAAD,CAAd,EADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,eAHZ,EAKE,yBAAG,SAAS,CAAC,kBAAb,EALF,CAKuC,GALvC,CAME,gCAAOK,KAAK,CAACI,MAAN,CAAe,CAAf,EAAoB,gCAAOJ,KAAK,CAACI,MAAb,CAA3B,CANF,CALF,CAaE,8BACE,OAAO,CAAE,iBAACD,CAAD,QAAOb,CAAAA,MAAM,CAACK,GAAD,CAAb,EADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,eAHZ,EAKE,yBAAG,SAAS,CAAC,oBAAb,EALF,CAbF,CAoBE,oBAAC,IAAD,EAAM,EAAE,kBAAYA,GAAZ,CAAR,CAA2B,SAAS,CAAC,iBAArC,eACa,GADb,CAEGM,QAAQ,CAACG,MAAT,CAAkB,CAAlB,EACC,4BAAM,SAAS,CAAC,eAAhB,EAAiCH,QAAQ,CAACG,MAA1C,CAHJ,CApBF,CA0BG,CAACX,IAAI,CAACY,OAAN,EAAiBN,IAAI,GAAKN,IAAI,CAACM,IAAL,CAAUJ,GAApC,EACC,8BACE,OAAO,CAAE,iBAACQ,CAAD,QAAOZ,CAAAA,UAAU,CAACI,GAAD,CAAjB,EADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,gBAHZ,EAKE,yBAAG,SAAS,CAAC,cAAb,EALF,CA3BJ,CAPF,CADF,CADF,CAgDD,CAvDD,CAiEA,GAAMW,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,QAAY,CACnCd,IAAI,CAAEc,KAAK,CAACd,IADuB,CAAZ,EAAzB,CAIA,cAAeL,CAAAA,OAAO,CAACkB,gBAAD,CAAmB,CAAEjB,OAAO,CAAPA,OAAF,CAAWC,MAAM,CAANA,MAAX,CAAmBC,UAAU,CAAVA,UAAnB,CAAnB,CAAP,CACbC,QADa,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, unLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  addLike,\r\n  unLike,\r\n  deletePost,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='post bg-white p-1 my-1'>\r\n        <div>\r\n          <Link to={`/profile/${user}`}>\r\n            <img className='round-img' src={avatar} alt='' />\r\n            <h4>{name}</h4>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <p className='my-1'>{text}</p>\r\n          <p className='post-date'>\r\n            Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n          </p>\r\n          <button\r\n            onClick={(e) => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up'></i>{\" \"}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={(e) => unLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={(e) => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  unLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStatesToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatesToProps, { addLike, unLike, deletePost })(\r\n  PostItem\r\n);\r\n"]},"metadata":{},"sourceType":"module"}