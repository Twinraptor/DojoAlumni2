{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, DELETE_ACCOUNT, CLEAR_PROFILE } from \"./types\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(errors);\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  console.log(\"looking for ID\", id);\n\n  try {\n    const res = await axios.delete(`api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Deleted\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Deleted\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Account AND Profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure? This action can NOT be undone!\")) {\n    try {\n      const res = await axios.delete(\"api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert(\"your account has been permanantly deleted.\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["D:/react/DojoAlumni/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","DELETE_ACCOUNT","CLEAR_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","console","log","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  DELETE_ACCOUNT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\n\r\n// Get current users profile\r\n\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\n\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\"/api/profile\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile updated\" : \"Profile Created\", \"success\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors);\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Add experience\r\n\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Added\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Add education\r\n\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.put(\"/api/profile/education\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Added\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  console.log(\"looking for ID\", id);\r\n  try {\r\n    const res = await axios.delete(`api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Deleted\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Deleted\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Account AND Profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure? This action can NOT be undone!\")) {\r\n    try {\r\n      const res = await axios.delete(\"api/profile\");\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n\r\n      dispatch({ type: DELETE_ACCOUNT });\r\n\r\n      dispatch(setAlert(\"your account has been permanantly deleted.\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}