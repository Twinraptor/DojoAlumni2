{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\DojoAlumni\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"profile.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    class: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    class: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, date)), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, likes.length)), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    href: \"post.html\",\n    class: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Discussion \", React.createElement(\"span\", {\n    class: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })))));\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStatesToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStatesToProps, {})(PostItem);","map":{"version":3,"sources":["D:/react/DojoAlumni/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","length","loading","propTypes","object","isRequired","mapStatesToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div class='post bg-white p-1 my-1'>\r\n        <div>\r\n          <a href='profile.html'>\r\n            <img class='round-img' src={avatar} alt='' />\r\n            <h4>{name}</h4>\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <p class='my-1'>{text}</p>\r\n          <p class='post-date'>\r\n            Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n          </p>\r\n          <button type='button' class='btn btn-light'>\r\n            <i class='fas fa-thumbs-up'></i>\r\n            <span>{likes.length}</span>\r\n          </button>\r\n          <button type='button' class='btn btn-light'>\r\n            <i class='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <a href='post.html' class='btn btn-primary'>\r\n            Discussion <span class='comment-count'>{comments.length}</span>\r\n          </a>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button type='button' class='btn btn-danger'>\r\n              <i class='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStatesToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStatesToProps, {})(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}